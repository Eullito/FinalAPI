spring.application.name=TourAPI_Test

# server port 설정하기
server.port=8080

# OAuth2 클라이언트 설정
#spring.security.oauth2.client.registration.google.client-id=<구글_클라이언트_ID>
#spring.security.oauth2.client.registration.google.client-secret=<구글_클라이언트_Secret>
#spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
#spring.security.oauth2.client.registration.google.scope=profile,email

## 네이버 OAuth2 클라이언트 설정
#spring.security.oauth2.client.registration.naver.client-id=jJhJ25WpEQQ6wzgiJVgO
#spring.security.oauth2.client.registration.naver.client-secret=jj3COTcTna
#spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/home
#spring.security.oauth2.client.registration.naver.client-name=Naver
#spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.naver.scope=name,email,nickname,phone_number
#spring.security.oauth2.client.registration.naver.provider=naver
#
## 네이버 OAuth2 제공자 설정
#spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
#spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
#spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
#spring.security.oauth2.client.provider.naver.user-name-attribute=response

#spring.security.oauth2.client.registration.kakao.client-id=<카카오_클라이언트_ID>
#spring.security.oauth2.client.registration.kakao.client-secret=<카카오_클라이언트_Secret>
#spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/kakao
#spring.security.oauth2.client.registration.kakao.client-name=Kakao
#spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email

#jsp를 사용할 경우 - 추가적으로 의존성 추가해야함
#spring.mvc.view.prefix=/WEB-INF/views/
#spring.mvc.view.suffix=.jsp

#thymeleaf 사용 여부
spring.thymeleaf.enabled=true

#jsp와 thymeleaf를 동시에 사용하는 경우 구분을 짓기 위해 설정
#spring.thymeleaf.view-names=thymeleaf/*

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

#cache 활성화 여부, 개발환경시에는 비 활성화
spring.thymeleaf.cache=false

#template 인코딩
spring.thymeleaf.encoding=UTF-8
#기본 template모드 html,xml,text, js 등
spring.thymeleaf.mode=HTML
#렌던링 전에 template 존재 여부확인
spring.thymeleaf.check-template=true
#template 위치 존재 여부 확인
spring.thymeleaf.check-template-location=true

#DB 설정
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/hkeduweb
spring.datasource.username=root
spring.datasource.password=root

#mybatis 설정
mybatis.type-aliases-package=com.tour.dtos
mybatis.mapper-locations=classpath:/mybatis/**/*.xml

#파일 한개당 사이즈
spring.servlet.multipart.max-file-size = 100MB
#요청당 최대 파일 사이즈
spring.servlet.multipart.max-request-size = 100MB

# encoding
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true
server.servlet.encoding.enabled=true